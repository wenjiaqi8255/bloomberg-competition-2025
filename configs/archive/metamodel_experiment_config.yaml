# MetaModel End-to-End Experiment Configuration
# ==========================================
# This configuration defines a complete MetaModel training and evaluation workflow
# that integrates with the existing experiment orchestrator infrastructure

# 1. Experiment Metadata
experiment:
  name: "metamodel_core_satellite_experiment"
  description: "Complete MetaModel training for Core+Satellite strategy combination"
  tags: ["metamodel", "core_satellite", "ridge_regression"]
  log_to_wandb: true

# 2. MetaModel Training Configuration
metamodel_training:
  # Training method and parameters
  method: "ridge"  # Options: equal, lasso, ridge, dynamic
  alpha: 0.5  # Regularization strength for ridge/lasso
  positive_weights: true
  weight_sum_constraint: 1.0

  # Strategy configuration (strategies to combine)
  strategies:
    - "ml_strategy_*"  # Pattern matching for ML strategy files
    - "e2e_ff5_regression_*"  # Pattern matching for FF5 strategy files

  # Data collection parameters
  data_source: "portfolio_files"  # Options: backtest, portfolio_files, synthetic, live
  start_date: "2022-01-01"
  end_date: "2023-12-29"
  target_benchmark: "equal_weighted"  # Use equal-weighted portfolio as target (financial standard)

  # Training parameters
  use_cross_validation: true
  cv_folds: 5
  validation_split: 0.2

  # Experiment tracking
  experiment_name: "metamodel_core_satellite"
  track_strategy_correlation: true
  track_contribution_analysis: true

# 3. Strategy Data Generation (for synthetic data)
synthetic_strategy_config:
  # Define synthetic strategy characteristics
  DualMomentumStrategy:
    annual_return: 0.10
    annual_volatility: 0.15
    correlation_factor: 0.3

  MLStrategy:
    annual_return: 0.12
    annual_volatility: 0.18
    correlation_factor: 0.25

  FF5Strategy:
    annual_return: 0.08
    annual_volatility: 0.12
    correlation_factor: 0.4

# 4. Model Registry Configuration
model_registry:
  base_path: "./models"
  save_model: true
  model_name_template: "metamodel_{method}_{date}"
  artifacts:
    include_training_data: true
    include_feature_pipeline: true
    include_performance_metrics: true

# 5. Validation and Testing
validation:
  # Out-of-sample testing period
  test_start_date: "2025-10-06"
  test_end_date: "2025-10-08"

  # Performance metrics to compute
  metrics:
    - "r2"
    - "mse"
    - "mae"
    - "sharpe_ratio"
    - "max_drawdown"
    - "volatility"

  # Benchmark comparison
  benchmark_comparison:
    enabled: true
    benchmark: "equal_weighted"
    compare_metrics: ["sharpe_ratio", "volatility", "max_drawdown"]

# 6. System Integration Testing
system_integration:
  # Test with SystemOrchestrator after training
  enabled: true

  # Test configuration
  initial_capital: 1000000
  test_period:
    start_date: "2025-10-06"
    end_date: "2025-10-08"

  # Assets to test with
  universe:
    symbols: ["SPY", "AAPL", "MSFT", "GOOGL", "AMZN"]

  # Expected strategy behavior
  expected_behaviors:
    weight_stability: 0.1  # Max weight change per rebalance
    min_active_strategies: 2  # Minimum strategies with non-zero weights
    max_concentration: 0.6  # Maximum weight in single strategy

# 7. Reporting and Output
reporting:
  # Generate comprehensive report
  generate_report: true
  output_format: ["html", "json"]

  # Report sections
  sections:
    - "training_summary"
    - "weight_analysis"
    - "strategy_contributions"
    - "performance_attribution"
    - "risk_metrics"
    - "integration_test_results"

  # Visualizations
  plots:
    - "weight_evolution"
    - "strategy_correlation_heatmap"
    - "performance_comparison"
    - "risk_return_scatter"

# 8. Advanced Configuration
advanced:
  # Hyperparameter optimization for MetaModel
  hyperparameter_optimization:
    enabled: true
    optimization_method: "optuna"
    n_trials: 50
    cv_folds: 5
    objective: "sharpe_ratio"
    direction: "maximize"

    # Optuna sampler and pruner settings
    sampler:
      type: "tpe"  # tpe, random, cmaes, grid
      seed: 42

    pruner:
      type: "median"
      n_startup_trials: 5
      n_warmup_steps: 3

    # MetaModel search space
    search_space:
      method:
        type: "categorical"
        choices: ["equal", "lasso", "ridge", "dynamic"]
      alpha:
        type: "float"
        low: 0.01
        high: 10.0
        step: 0.1
        log_scale: true
      positive_weights:
        type: "categorical"
        choices: [true, false]
      min_weight:
        type: "float"
        low: 0.0
        high: 0.1
        step: 0.01
      max_weight:
        type: "float"
        low: 0.3
        high: 1.0
        step: 0.05
      weight_sum_constraint:
        type: "float"
        low: 0.8
        high: 1.2
        step: 0.05

    # Strategy-specific optimization
    strategy_optimization:
      enabled: true
      allow_strategy_exclusion: true  # Allow optimization to exclude strategies
      min_active_strategies: 2
      max_active_strategies: 10

    # Logging and tracking
    logging:
      log_optimization: true
      log_all_trials: true
      log_weight_evolution: true
      log_strategy_performance: true

    # Performance targets
    targets:
      min_sharpe_ratio: 0.5
      max_volatility: 0.2
      max_drawdown: 0.15

  # Ensemble methods (optional)
  ensemble:
    enabled: false
    methods:
      - method: "ridge"
        weight: 0.5
      - method: "lasso"
        weight: 0.3
      - method: "equal"
        weight: 0.2

  # Robustness testing
  robustness_tests:
    enabled: true
    tests:
      - "data_corruption"
      - "parameter_sensitivity"
      - "outlier_impact"