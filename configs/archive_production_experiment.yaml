# Production Optimal System Experiment Configuration
# ==================================================
# Complete production-ready experiment configuration for the OptimalSystemOrchestrator
# This configuration enables one-line optimal system discovery with automatic model selection,
# metamodel optimization, and complete system evaluation

# System configuration
system:
  name: "production_optimal_system"
  initial_capital: 1000000
  enable_short_selling: false
  benchmark_symbol: "SPY"

# Data configuration for optimal system
data:
  universe:
    # Technology (Large Growth)
    - AAPL
    - MSFT
    - GOOGL
    - META
    - NVDA
    # Technology (Mid/Large Value)
    - CSCO
    - IBM
    - INTC
    # Healthcare
    - JNJ
    - UNH
    - PFE
    - ABT
    # Financials
    - JPM
    - BAC
    - GS
    - WFC
    # Consumer
    - AMZN
    - TSLA
    - HD
    - WMT
    - PG
    - KO
    # Industrial
    - CAT
    - GE
    - HON
    # Energy
    - XOM
    - CVX
    # Communication
    - VZ
    - DIS
    - NFLX

  train_period:
    start: "2022-01-01"
    end: "2022-12-31"

  test_period:
    start: "2023-01-01"
    end: "2023-12-31"

  data_provider:
    type: YFinanceProvider
    parameters:
      max_retries: 3
      retry_delay: 1.0
      request_timeout: 30
      cache_enabled: true

  # Fama-French 5-factor data provider for FF5 regression model
  factor_data_provider:
    type: FF5DataProvider
    parameters:
      data_frequency: "daily"

# Model selection configuration
model_selection:
  model_types:
    - "xgboost"
    - "ff5_regression"

  n_trials: 50  # Number of hyperparameter optimization trials
  primary_metric: "sharpe_ratio"  # Primary metric for model selection
  cv_folds: 3  # Cross-validation folds

  # Alternative primary metrics:
  # "sortino_ratio" - Better downside risk assessment
  # "calmar_ratio" - Return to max drawdown ratio
  # "total_return" - Raw return performance
  # "win_rate" - Percentage of winning periods
  # "sharpe_ratio" - Sharpe ratio

  hyperparameter_optimization:
    optimization_method: "optuna"
    sampler_type: "tpe"
    pruner_type: "median"
    log_to_wandb: false

# MetaModel selection configuration
metamodel_selection:
  n_trials: 50  # Number of metamodel optimization trials
  weight_method: "ridge"  # Method for weight calculation - use Ridge regression

  # Alternative weight methods:
  # "equal" - Equal weighting for all strategies
  # "risk_parity" - Risk-based weighting
  # "performance_weighted" - Weight by overall performance
  # "information_ratio_weighted" - Weight by information ratio
  # "sharpe_weighted" - Weight by Sharpe ratio

  min_weight: 0.05  # Minimum weight for any single strategy
  max_weight: 0.5   # Maximum weight for any single strategy

  # Metamodel types to try - focus on Ridge
  metamodel_types:
    - "ridge"  # Ridge regression for stable weights

  # Advanced configuration
  advanced:
    enable_cross_validation: true
    cv_folds: 3
    ensemble_metamodels: false  # Whether to ensemble multiple metamodels
    weight_stability_check: true  # Check weight stability over time

# System evaluation configuration
system_evaluation:
  # Minimum requirements for system success
  min_requirements:
    sharpe_ratio: 0.8      # Minimum annualized Sharpe ratio
    sortino_ratio: 1.0     # Minimum Sortino ratio
    calmar_ratio: 0.5      # Minimum Calmar ratio
    total_return: 0.10     # Minimum annual return (10%)
    max_drawdown: -0.25    # Maximum acceptable drawdown (-25%)
    win_rate: 0.45         # Minimum win rate (45%)
    volatility: 0.30       # Maximum annualized volatility (30%)

  # Primary metrics for system comparison
  primary_metrics:
    - "sharpe_ratio"
    - "sortino_ratio"
    - "calmar_ratio"
    - "total_return"
    - "max_drawdown"

  # Risk metrics to track
  risk_metrics:
    - "value_at_risk_95"
    - "conditional_var_95"
    - "skewness"
    - "kurtosis"
    - "beta"
    - "alpha"
    - "information_ratio"
    - "tracking_error"

  # Portfolio construction
  portfolio_construction:
    method: "box_based"  # Use Box-First portfolio construction
    rebalance_frequency: "weekly"
    max_positions: 12
    min_position_weight: 0.05
    max_position_weight: 0.15

    # Box-based construction parameters
    box_based_config:
      # Stock classification for box creation
      classifier:
        method: "four_factor"
        cache_enabled: true

      # Box construction dimensions
      dimensions:
        size: ["large", "mid", "small"]
        style: ["growth", "value"]
        region: ["developed"]
        sector: [
          "Technology", "Financials", "Healthcare",
          "Consumer Discretionary", "Consumer Staples",
          "Industrials", "Energy", "Communication Services",
          "Materials", "Utilities", "Real Estate"
        ]

      # Box allocation rules
      allocation_method: "signal_proportional"  # Use combined model signals
      stocks_per_box: 2
      min_stocks_per_box: 1

      # Box weights - ensure systematic diversification
      box_weights:
        method: "equal"  # Equal weights for all boxes

      # Stock selection within boxes
      box_selector:
        type: "signal_based"  # Select stocks by combined signal strength

      # Risk management
      box_risk_limits:
        max_box_weight: 0.15  # Maximum 15% in any single box
        min_box_coverage: 0.6  # Minimum 60% of target boxes covered
        max_sector_concentration: 0.25  # Maximum 25% in any sector

  # Benchmark comparison
  benchmark_comparison:
    benchmark: "SPY"
    calculate_alpha: true
    calculate_beta: true
    calculate_information_ratio: true

# Output configuration
output:
  save_results: true
  output_directory: "./test_results/production_optimal_system"
  generate_report: true

  # What to save
  save_models: true
  save_metamodels: true
  save_performance_data: true
  save_signals: true
  save_weights_history: true

  # Report configuration
  report:
    include_performance_summary: true
    include_model_comparison: true
    include_metamodel_analysis: true
    include_risk_analysis: true
    include_benchmark_comparison: true
    include_weight_analysis: true

  # Export formats
  export_formats:
    - "json"
    - "csv"
    - "html"  # For web-based reports

# Logging configuration
logging:
  level: "INFO"  # DEBUG, INFO, WARNING, ERROR
  log_to_file: true
  log_file: "./test_results/production_optimal_system/experiment.log"
  log_to_console: true

  # Advanced logging
  max_file_size: "50MB"
  backup_count: 5
  include_timestamps: true
  include_performance_logs: true

# Experiment tracking
experiment_tracking:
  enabled: false  # Set to true to enable WandB logging
  project_name: "production_optimal_system"
  entity: "your_team_name"
  tags: ["production", "optimal_system", "multi_model"]

  # What to track
  track_hyperparameters: true
  track_performance_metrics: true
  track_model_comparisons: true
  track_metamodel_weights: true

# Advanced configuration
advanced:
  # Parallel processing
  parallel_processing: true
  max_workers: 4  # Number of parallel processes
  use_gpu: false  # Set to true if GPU available

  # Caching
  caching:
    enabled: true
    cache_dir: "./cache/optimal_system"
    cache_models: true
    cache_metamodels: true
    cache_performance_data: true
    max_cache_size_gb: 5

  # Error handling
  error_handling:
    continue_on_model_failure: true
    continue_on_metamodel_failure: true
    max_retry_attempts: 3
    retry_delay_seconds: 5

  # Validation
  validation:
    validate_data_quality: true
    validate_model_performance: true
    validate_metamodel_weights: true
    validate_system_requirements: true

# Quick test configuration (overrides main config when --quick-test is used)
quick_test:
  enabled: false

  # Reduced parameters for faster testing
  reduced_trials:
    model_n_trials: 5
    metamodel_n_trials: 5
    cv_folds: 2

  # Reduced data for faster testing
  reduced_data:
    universe: ["AAPL", "MSFT", "GOOGL"]
    train_period:
      start: "2023-01-01"
      end: "2023-06-30"
    test_period:
      start: "2023-07-01"
      end: "2023-09-30"

  # Relaxed requirements for testing
  relaxed_requirements:
    sharpe_ratio: 0.3
    max_drawdown: -0.4
    win_rate: 0.35

# Legacy mode configuration (for backward compatibility)
legacy_mode:
  enabled: false  # Set to true to use original ExperimentOrchestrator

  # When legacy_mode is true, these sections are used by the original system
  legacy_config:
    # Add legacy configuration sections here if needed
    # This ensures backward compatibility with existing experiments
    pass