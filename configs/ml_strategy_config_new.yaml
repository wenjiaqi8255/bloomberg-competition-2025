# ML Strategy Configuration
# =========================
# This configuration demonstrates ML strategy setup with feature engineering.

# Part 1: Data Provider Configuration
# ---------------------------------
data_provider:
  type: "YFinanceProvider"
  parameters:
    max_retries: 3
    retry_delay: 1.0

# Part 2: Training Pipeline Configuration
# ------------------------------------
training_setup:
  model:
    model_type: "xgboost"  # Use XGBoost model for ML strategy
    config:
      n_estimators: 100
      max_depth: 6
      learning_rate: 0.1
      random_state: 42

  feature_engineering:
    enabled_features: ['momentum', 'volatility', 'technical', 'volume', 'trend']
    momentum_periods: [21, 63, 252]
    volatility_windows: [20, 60]
    lookback_periods: [20, 60, 252]
    min_ic_threshold: 0.02
    min_significance: 0.1
    feature_lag: 1
    include_technical: true

  # Parameters for the training pipeline execution
  parameters:
    start_date: "2018-01-01"
    end_date: "2019-12-31"
    symbols:
      - AAPL
      - MSFT
      - GOOGL
      - AMZN
      - META
      - TSLA
      - NVDA
      - JPM
      - V
      - WMT

# Part 3: Strategy Configuration
# ------------------------------
strategy:
  type: ml
  name: MLStrategy_v1

  # Model configuration
  model_id: placeholder_model_id  # Will be overwritten by orchestrator
  min_signal_strength: 0.1       # Minimum signal strength threshold

  # Position sizing and risk management
  position_sizing:
    volatility_target: 0.15
    max_position_weight: 0.10

# Part 4: Backtesting Configuration
# --------------------------------
backtest:
  name: "ML_Strategy_Backtest"
  start_date: "2020-01-01"
  end_date: "2023-12-31"
  initial_capital: 1000000
  benchmark_symbol: "SPY"
  commission_rate: 0.001
  slippage_rate: 0.0005
  rebalance_frequency: "weekly"
  position_limit: 0.10
  rebalance_threshold: 0.001  # Allow small trades

# Universe configuration
universe:
  - AAPL
  - MSFT
  - GOOGL
  - AMZN
  - META
  - TSLA
  - NVDA
  - JPM
  - V
  - WMT

# Model training (if needed)
model_training:
  train_start: "2018-01-01"
  train_end: "2019-12-31"
  validation_split: 0.2
  test_size: 0.1

# NEW: Investment Framework for Box-based classification and allocation
investment_framework:
  enabled: true # Master switch for the entire box mechanism

  box_classification:
    # Rules for the StockClassifier
    size_config:
      method: "market_cap_thresholds"
      thresholds:
        large: 10.0  # in billions USD
        mid: 2.0
    style_config:
      # Currently uses technical proxies, so no specific thresholds here yet.
      # This section is for future expansion (e.g., using P/B ratios).
      method: "technical_proxies"
    region_config:
      # List of country codes/suffixes considered "developed"
      developed_markets: ['US', 'CA', 'GB', 'DE', 'FR', 'JP', 'AU', 'CH']

  allocation:
    # Rules for the BoxAllocator
    method: "tilt"  # Can be "equal" or "tilt"
    stocks_per_box: 3
    tilt_config:
      # This section is used only if method is "tilt"
      max_deviation: 0.06 # Max active weight deviation per box (e.g., Â±6%)

